You are building a goal-first, AI-powered contact intelligence app designed for early-stage founders. The purpose is to help users warm up and deepen their existing networks (phone, Twitter, LinkedIn), surface goal-relevant people, and follow up with smart prompts.

Your job is to organize the app structure into clean, modular components with the following principles:

1. Everything orbits around **goals**, not just people or tasks.
2. Relationships are not static. They evolve based on interaction, AI suggestions, and user intention.
3. Gamification is abstract and embedded‚Äîmotivating, not distracting.
4. AI sits beneath everything as a *rhizomatic intelligence layer*‚Äîsuggesting, observing, and nudging action based on goal alignment.

---

### üß© Required Sections (Organize These):

- **Home (Dashboard):**
  - Dynamic feed of today‚Äôs most relevant contacts, goals, and AI suggestions
  - XP and progress indicators (abstract UI only)
  - Quick actions (Add Goal, Add Contact, Compose Message)

- **Goals:**
  - Create, edit, and prioritize personal or professional goals
  - Link contacts to goals
  - Track ‚ÄúGoal Health‚Äù based on relationship momentum
  - AI surfaces suggested people to contact per goal

- **Relationships:**
  - Cleaned and deduplicated contact list from phone, Twitter, and LinkedIn
  - Filters: Warm, Cold, Dormant, Active, Funders, Collaborators, etc.
  - Add new contact manually or via QR/business card
  - Follow-up nudges and scheduling logic

- **Intelligence Layer:**
  - GPT-powered AI suggestions
  - Smart reminders
  - Suggested introductions
  - Dormant contact detection
  - Goal-aware messaging generator

- **Map (Network Visualization):**
  - Visualize connections by goal, industry, interaction recency
  - Highlight key connectors or dormant hubs
  - Use force-directed or radial layout depending on density

- **Settings:**
  - Integrations (Google Calendar, Email, Twitter, LinkedIn, Supabase auth)
  - CSV Import/Export
  - Gamification preferences (Motivated Mode, Clean Mode, Quiet Mode)
  - Privacy and Data Ownership

---

### ‚öôÔ∏è Technical Constraints:

- Use Supabase for contact + goal storage and deduplication logic
- Use Replit for full-stack prototyping
- Prefer TypeScript for structure
- Use OpenAI/GPT for all AI features (suggestions, messaging, clustering)
- Gamification logic operates silently unless invoked (e.g. XP after follow-up)
- Support eventual native iOS/Android wrapper ‚Äî design with responsive UI

---

### üß≠ App Philosophy:

- ‚ÄúStart with a goal, find your people, act with intention.‚Äù
- Abstract friction. AI does the heavy lifting. UI stays human and clear.
- Every feature must help someone launch, grow, or deepen their mission.

Output: Modular app folder structure with routing logic, component layout per section, and backend schema for Supabase (tables: users, goals, contacts, xp_events, quests).

This app will eventually serve as the nervous system for a new kind of founder-centered networking. Make it clean, expandable, and fast to prototype.
